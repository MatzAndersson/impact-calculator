.formRow {
  display: flex;
  align-items: flex-end;
  gap: 12px;
  margin-bottom: 14px;
}
.formControl {
  display: flex;
  position: relative;
  flex-direction: column;
  gap: 4px;
  font-weight: 600;
  font-size: 14px;
}

.tabHelper {
  
  color: var(--color-secondary); /* your orange, or use #FB6A37 */
           /* light orange background */
  border-radius: 8px;
  padding: 10px 16px;
  margin-bottom: 6px;
  font-size: 1.08rem;
  font-weight: 700;
  box-shadow: 0 2px 8px rgba(255,105,30,0.04);
  text-align: left;
}

.growthControl .suffixInput {
  margin-top: auto;
}

/*force the input to fill that wrapper: */
.growthControl .suffixInput .inputBase {
  width: 100%;
  box-sizing: border-box; /* include padding/border in width */
}

.helpIcon {
  display: inline-flex; /* treat like an inline icon */
  align-items: center; /* center  “?” vertically */
  justify-content: center; /* center “?” horizontally */
  width: 1.2em; /* make a square */
  height: 1.2em;
  margin-left: 0.8em;
  margin-bottom: 0.1em; /* a bit of breathing room */
  background-color: var(--color-secondary);
  color: white;
  font-size: 1em; /* scale the “?” inside */
  border-radius: 50%; /* circle */
  vertical-align: text-bottom; /* keep it aligned with the text baseline */
  cursor: help;
  font-weight: 600;
}

.growthTooltip {
  /* force wrapping */
  white-space: normal !important;
  overflow-wrap: break-word;
  /* constrain the width */
  max-width: 280px !important;
  /* optional: add some padding */
  padding: 0.5em !important;
  /* optional: make the arrow still point correctly */
  --react-tooltip-arrow-size: 6px;
  z-index: 1000; /* make sure it’s on top of everything */
}

.inputBase,
.selectBase {
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 2px;
  font-size: 16px;
}

.inputBase::placeholder {
  font-weight: 500;
  font-size: 14px;
  font-style: italic;
}

.suffixInput {
  display: flex !important;
  align-items: center;
  gap: 0.5rem;
  position: relative;
}

/* make space for the % */
.suffixInput .inputBase {
  padding-right: 1.5em;
}

/* absolutely position the % */
.suffixInput .suffix {
  position: absolute;
  top: 50%;
  right: 0.5em; /* tweak for perfect centering */
  transform: translateY(-50%);
  pointer-events: none; /* clicks go through to the input */
  font-weight: bold;
}

.periodToggle {
  display: flex; /* row */
  flex-direction: row;
  gap: 6px; /* space between the two labels */
  align-items: center;
  margin-bottom: 6px;
}
.radioInline {
  display: inline-flex;
  align-items: center;
  font-size: 14px;
}
.radioInline input[type="radio"] {
  cursor: pointer;
}

.errorText {
  color: #d00;
  position: absolute;
  margin-top: 0.25em;
  font-size: 0.7rem;
  position: absolute;
  left: 0; /* line up under the input */
  bottom: -1.25em;
  font-style: italic;
  white-space: nowrap;
  pointer-events: none;
}

@media (max-width: 600px) {
  .formRow {
    display: flex;
    flex-direction: column;
    gap: 1rem; /* space between each control */
  }

  .formControl {
    width: 90%; /* each control takes full width */
    min-width: 0; /* avoid overflow from inputs */
  }

  /* And make sure the % suffix stays glued to its input */
  .suffixInput {
    width: 100%;
    flex-wrap: nowrap;
    justify-content: space-between;
  }
}


